syntax = "proto3";

package janusrpc;

message SingleStateRequest {
  string deviceId = 1;
  string deviceType = 2;
}

message MultipleStateRequest {
  string nodeId = 1;
}

message StateResponse {
  string deviceId = 1;
  string nodeId = 2;
  int64 temperature = 3;
  int64 consumption = 4;
  int64 energyConsumed = 5;
  int64 lastReport = 6;
  bool conected = 7;
  int64 energyGenerated = 8;
  bool enabled = 9;
  bool needManteinance = 10;
  int64 lastManteinance = 11;
}

message MultipleStateResponse {
  repeated StateResponse states = 1;
}

message Filter {
  string type = 1;
  string dimension = 2;
  string value = 3;
  string lower = 4;
  string upper = 5;
}

message Aggregation {
  string type = 1;
  string name = 2;
  string field = 3;
}

message OrderBy {
  string dimension = 1;
  string direction = 2;
}

message TimelineQuery {
  repeated Filter filters = 1;
  string granularity = 2;
  string interval = 3;
  repeated string dimensions = 4;
  repeated Aggregation aggregations = 5;
  OrderBy orderBy = 6;
}

message BucketRange {
  string name = 1;
  string lower = 2;
  string upper = 3;
}

message SegmentQuery {
  repeated Filter filters = 1;
  string granularity = 2;
  string interval = 3;
  Aggregation aggregation = 4;
  repeated string dimensions = 5;
  OrderBy orderBy = 6;
}

message SegmentedTimelineQuery {
  repeated Filter filters = 1;
  string granularity = 2;
  string interval = 3;
  string dimension = 4;
  Aggregation aggregation = 5;
  repeated string groupBy = 6;
  repeated BucketRange bucketRanges = 7;
}

message TimelineItem {
  string name = 1;
  float count = 2;
}

message TimelineResponse {
  string dimension = 1;
  repeated TimelineItem items = 2;
}

message TimelineQueryResponse {
  repeated TimelineResponse result = 1;
  int64 total = 2;
}

message SegmentItem {
  string name = 1;
  float value = 2;
  repeated SegmentItem segments = 3;
}

message SegmentedQueryResponse {
  repeated SegmentItem segments = 1;
  int64 total = 2;
}

service JanusService {
  rpc GetState(SingleStateRequest) returns (StateResponse) {}
  rpc StreamState(SingleStateRequest) returns (stream StateResponse) {}
  rpc GetNodeStates(MultipleStateRequest) returns (MultipleStateResponse) {}
  rpc GetTelemetryTimeline(TimelineQuery) returns (TimelineQueryResponse) {}
  rpc GetSegmentedTimeline(SegmentedTimelineQuery) returns (TimelineQueryResponse) {}
  rpc GetSegmentQuery(SegmentQuery) returns (SegmentedQueryResponse) {}
}